# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

# - script: |
#     npm run lint
#   displayName: 'npm lint'

- script: |
    npm ci
  displayName: 'npm ci'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'mackolicious'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'Mackolicious_NextJs-Public'
    cliProjectName: 'NextJs Public'
    cliSources: 'components,lib,pages,posts,utils'
    extraProperties: |
      sonar.testExecutionReportPaths=test-report.xml
      sonar.javascript.lcov.reportPaths=coverage/lcov.info 

- script: |
    npm run build
  displayName: 'npm build'

- script: |
    npm run test
  displayName: 'npm run test'

# - task: PublishTestResults@2
#   displayName: Publish test results
#   condition: succeededOrFailed()
#   inputs:
#     testResultsFormat: jest-sonar-reporter
#     testResultsFiles: "test-report.xml"

- task: SonarCloudAnalyze@1
  continueOnError: false

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'
  continueOnError: false

- task: PowerShell@2
  displayName: SonarCloud Result
  inputs:
    targetType: 'inline'
    script: |
      $token = [System.Text.Encoding]::UTF8.GetBytes("bb668141a8c8410b345d52a249d1bff75432617c:")
      $base64 = [System.Convert]::ToBase64String($token)
       
      $basicAuth = [string]::Format("Basic {0}", $base64)
      $headers = @{ Authorization = $basicAuth }
       
      $result = Invoke-RestMethod -Method Get -Uri https://sonarcloud.io/api/qualitygates/project_status?projectKey=Mackolicious_NextJs-Public -Headers $headers
      $result | ConvertTo-Json | Write-Host
       
      if ($result.projectStatus.status -eq "OK") {
      Write-Host "Quality Gate Succeeded"
      }else{
      throw "Quality gate failed"
      }

- task: CopyFiles@2
  displayName: "Copy Output Directory"
  inputs:
    Contents: |
        **
        !.git/**/*
        !debug.log
    targetFolder: $(Build.ArtifactStagingDirectory)

